body {
    background-color: white;
    font-family: "Mali", serif;
}

#mainContent {
    background-image: url("assets/mainPage.svg");
}

nav {
    background-color: rgba(117, 176, 231, 0.815);
    position: relative;
}

h2 {
    font-weight: 800;
    font-size: 40px;
}
ul {
    color: black;
    font-size: 25px;
}

footer {
    background-color: rgba(117, 176, 231, 0.815);
}

img {
    position: relative;
}
footer {
    position: relative;
    background-color: rgba(117, 176, 231, 0.815) !important;
}

#icons{
    font-size: 25px;
    color: black;
}

.fab:hover {
    transform: scale(1.3)
}
.fas:hover {
    transform: scale(1.3)
}


li:hover {
    transform: scale(1.2)
}

#contactHeader {
    color: black !important;
}
#portfolioHeader {
    color: black !important;
}



/* Transition
To use this property in a transition, you have two steps. In the first step, you specify the transform property as the property you want your transition to listen to:
g
.pictureContainer img {
    position: relative;
    top: 0px;
    transition: transform .2s ease-in-out;
}
With your transition defined, you can then specify the transform property along with the translate3d function:

.pictureContainer img:hover {
    transform: translate3d(0px, -150px, 0px);
}
As shown in the example towards the top of this page, hovering over each image element will cause a transform that causes the image to shift upwards...by 150 pixels to be exact.

Animation
For animations, make sure the keyframes in your @keyframes rule contain the transform declaration using translate3d:

@keyframes bobble {
    0% {
        transform: translate3d(50px, 40px, 0px);
        animation-timing-function: ease-in;
    }
    50% {
        transform: translate3d(50px, 50px, 0px);
        animation-timing-function: ease-out;
    }
    100% {
        transform: translate3d(50px, 40px, 0px);
    }
} */

/* #somethingSomethingDarkSide {
    animation-name: deathstar;
    animation-duration: 25s;
    animation-iteration-count: 1;
    animation-play-state: paused;
    animation-delay: 0s;
    animation-direction: normal;
    animation-fill-mode: both;
    animation-timing-function: ease-out; */

    /* animation: <animation-name> <animation-duration> <animation-timing-function> <animation-delay> <animation-iteration-count> <animation-direction> <animation-fill-mode>; */

    /* Anyway, to put our longhand example into shorthand, here is how everything would look:

#somethingSomethingDarkSide {
    animation: deathstar 25s ease-out 0s 1 normal both;
    animation-play-state: paused; */

    /* @keyframes bobble {
        0% {
            transform: translate3d(50px, 40px, 0px);
            animation-timing-function: ease-in;
        }
        50% {
            transform: translate3d(50px, 50px, 0px);
            animation-timing-function: ease-out;
        }
        100% {
            transform: translate3d(50px, 40px, 0px);
        }
    } */
